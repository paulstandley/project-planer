{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handelChange","evt","_this","setState","Object","defineProperty","target","value","handelSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","newUser","getSate","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreatProject","createProject","history","push","authorId","add","objectSpread","Date","err","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","CreateProject","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d64e87f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><a onClick={props.signOut}>Log Out</a></li>\r\n      <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","// sign in user\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((error) => {\r\n            dispatch({ type: 'LOGIN_ERROR', error });\r\n        });\r\n    }\r\n}\r\n// sign out user\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n// sign up user\r\nexport const signUp = (newUser) => {\r\n    return(dispatch, getSate, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n// create new user in firebase\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            }).then(() => {\r\n                dispatch({type: 'SIGNUP_SUCCESS'});\r\n            }).catch(error => {\r\n                dispatch({type: 'SIGNUP_ERROR', error})\r\n            })\r\n\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">Project Planer</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <hr />\r\n          <ul className=\"notifications\">\r\n            {notifications && notifications.map(item => {\r\n              console.log(item)\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.content}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project })  => {\r\n  return (\r\n    <div>\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content gray-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted by: {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className=\"gray-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map((project) => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id} >\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom'; \r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    return ( \r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList  projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.project,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n \r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'project', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to='/signin' />;\r\n  if(project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <p>{project.content}</p>\r\n            <hr />\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }else{\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading data ....</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.project;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'project' }\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = { \r\n    email: '',\r\n    password: ''\r\n   }\r\n\r\n  handelChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.id]: evt.target.value\r\n    });\r\n  }\r\n\r\n  handelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.signIn(this.state);\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() { \r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />;  \r\n    return ( \r\n      <div className=\"container\">\r\n        <form onSubmit={this.handelSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input  type=\"email\" id=\"email\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input  type=\"password\" id=\"password\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login></button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n\r\nconst mapSateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))\r\n  }\r\n}\r\nexport default connect(mapSateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = { \r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n   }\r\n\r\n  handelChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.id]: evt.target.value\r\n    });\r\n  }\r\n\r\n  handelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.signUp(this.state)\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { auth, authError } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />; \r\n    return ( \r\n      <div className=\"container\">\r\n        <form onSubmit={this.handelSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input  type=\"password\" id=\"password\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input  type=\"text\" id=\"firstName\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input  type=\"text\" id=\"lastName\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up></button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreatProject extends Component {\r\n  state = { \r\n    title: '',\r\n    content: ''\r\n   }\r\n\r\n  handelChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.id]: evt.target.value\r\n    });\r\n  }\r\n\r\n  handelSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if(!auth.uid) return <Redirect to='/signin' />;   \r\n    return ( \r\n      <div className=\"container\">\r\n        <form onSubmit={this.handelSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input  type=\"text\" id=\"title\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handelChange}/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n     );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatProject);","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n  // make async call to database\r\n  const firestore = getFirestore();\r\n  const profile = getState().firebase.profile;\r\n  const authorId = getState().firebase.auth.uid;\r\n\r\n  firestore.collection('project').add({\r\n    ...project,\r\n    authorFirstName: profile.firstName,\r\n    authorLastName: profile.lastName,\r\n    authorId: authorId,\r\n    createdAt: new Date()\r\n  }).then(() => {\r\n    dispatch({ type: 'CREATE_PROJECT', project});\r\n  }).catch((err) => {\r\n    dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n  })  \r\n  }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n \nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n         <Navbar />\n         <Switch>\n           <Route exact path='/' component={Dashboard} />\n           <Route path='/project/:id' component={ProjectDetails} />\n           <Route path='/signin' component={SignIn} />\n           <Route path='/signup' component={SignUp} />\n           <Route path='/create' component={CreateProject} />\n         </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.error('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success', action);\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success', action)\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n            case 'SIGNUP_ERROR':\r\n            console.log('signup error ', action.error.authError)\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        { id: \"1\", title: \"help find a peach\", content: \"blar blah bla\" },\r\n        { id: \"2\", title: \"help cook the peach\", content: \"blar blah bla\" },\r\n        { id: \"3\", title: \"help to eat peach\", content: \"blar blah bla\" }\r\n    ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT': console.log('created project', action.project);\r\n        return state;\r\n        case 'CREATE_PROJECT_ERROR': console.log('created project error', action.err);\r\n        return state;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyDHo6VWy-WRYRFb8SBL7BMHjlo7mj1rHI4\",\r\n  authDomain: \"project-planer-8d7d7.firebaseapp.com\",\r\n  databaseURL: \"https://project-planer-8d7d7.firebaseio.com\",\r\n  projectId: \"project-planer-8d7d7\",\r\n  storageBucket: \"project-planer-8d7d7.appspot.com\",\r\n  messagingSenderId: \"897259823180\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\n \r\nconst store = createStore(rootReducer, \r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig),\r\n    reactReduxFirebase(fbConfig, {\r\n      useFirestoreForProfile: true,\r\n      userProfile: 'users',\r\n      attachAuthIsReady: true\r\n    })\r\n  ) \r\n);\r\nstore.firebaseAuthIsReady.then(() => {\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n})"],"sourceRoot":""}